# Base stage with common dependencies
FROM imbios/bun-node:20-slim AS base
ARG DEBIAN_FRONTEND=noninteractive

# Asia/Tokyo timezone
RUN apt-get -y update && \
  apt-get install -yq openssl git ca-certificates tzdata python3 build-essential && \
  ln -fs /usr/share/zoneinfo/Asia/Tokyo /etc/localtime && \
  dpkg-reconfigure -f noninteractive tzdata

WORKDIR /app

# Install dependencies based on the preferred package manager
COPY frontend/package.json frontend/bun.lock* ./
RUN bun install --frozen-lockfile

# Test stage
FROM oven/bun:1.3.0-slim AS test

# Set environment variables
ENV NODE_ENV=test \
    BUN_RUNTIME_TRANSPILER_CACHE_PATH=0 \
    PATH="/usr/local/bin:$PATH:/root/.bun/bin"

# Set work directory
WORKDIR /app

# Copy package.json and bun.lockb for dependency installation
COPY frontend/package.json ./
COPY frontend/bun.lockb* ./

# Install dependencies
RUN bun install --frozen-lockfile

# Copy the frontend source code
COPY frontend/ ./

# Override entrypoint and set command to run tests
ENTRYPOINT []
CMD ["bun", "test"]

# Build stage
FROM base AS builder
WORKDIR /app

# Copy environment file for build
COPY frontend/.env* ./

# Copy source code
COPY frontend/ .

# Build the app
RUN bun run build

# Production stage
FROM node:20-slim AS production

WORKDIR /app

ENV NODE_ENV=production
ENV PORT=3000

# Copy built application from builder stage
COPY --from=builder /app/public ./public
COPY --from=builder /app/.next/standalone ./
COPY --from=builder /app/.next/static ./.next/static

EXPOSE 3000

CMD ["node", "server.js"]
